# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: nginx-2048-ingress
#   namespace: dev
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
#     kubernetes.io/ingress.class: nginx
# spec:
#   rules:
#   # - host: blue.groveops.net
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: hello-world-green-services
#             port:
#               number: 80
  # - http:
  #     paths:
  #     - path: /blue
  #       pathType: Prefix
  #       backend:
  #         service:
  #           name: hello-world-blue-service
  #           port:
  #             number: 80


# --- 
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: blue-green-ingress
#   annotations:
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:489994096722:certificate/d05d9767-a428-486c-9089-2bfb0fa5191b
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
#     alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
#     kubernetes.io/ingress.class: alb
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: instance
    
# spec:
#   rules:

#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: hello-world-green-services
#             port:
#               number: 80
#   # - http:
#   #     paths:
#   #     - path: /blue
#   #       pathType: Prefix
#   #       backend:
#   #         service:
#   #           name: hello-world-blue-service
#   #           port:
#   #             number: 80


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: blue
  name: ingress-2048
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:489994096722:certificate/d05d9767-a428-486c-9089-2bfb0fa5191b
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip 
    alb.ingress.kubernetes.io/target-https-ports: "443"
    # alb.ingress.kubernetes.io/group.name: staging-lb 
  # Health Check Settings
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/actions.blue-green: |
      {
        "type":"forward",
        "forwardConfig":{
          "targetGroups":[
            {
              "serviceName":"hello-world-blue-service",
              "servicePort":"80",
              "weight":100
            },
            {
              "serviceName":"hello-world-green-services",
              "servicePort":"80",
              "weight":0
            }
          ]
        }
      }
spec:
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: hello-world-blue-service
              port:
                number: 80
